ΕΝΤΟΛΗ ΜΕΤΑΓΛΩΤΤΙΣΗΣ ΚΑΙ ΕΚΤΕΛΕΣΗΣ

ΕΝΤΟΛΗ ΜΕΤΑΓΛΩΤΤΙΣΗΣ  :  g++ -std=c++11 Main.cpp Sequence.cpp Class.cpp PairList.cpp PairNode.cpp  Student.cpp  -o exe
ΕΝΤΟΛΗ ΕΚΤΕΛΕΣΗΣ : ./exe 3 5 3 30


Έχω φτιάξει 5 αρχεία .h για τις κλάσεις, 5 αρχεία .cpp για την υλοποίηση των συναρτήσεων της κάθε κλάσης και 1 αρχείο .cpp για την main.
Χρησιμοποιώ include guards για να αποφύγω το πρόβλημα του double inclusion.
Χρησιμοποίησα κυρίως δείκτες και πινάκες δεικτών σε αντικείμενα κλάσεων γιατί ήθελα να εξασκηθώ σε αυτό το κομμάτι.
Σχεδόν όλες οι εξηγήσεις για το τι είναι και γιατί χρησιμοποιήθηκαν κάποια κομμάτια κώδικα γίνονται σε σχόλια μέσα στον κώδικα οπότε δεν θα τα ξανά αναφέρω και εδώ.
Τις κλάσεις τις χώρισα σε ξεχωριστά αρχεία για να είναι πιο εύκολη η συγγραφή, ανάγνωση και συντήρηση του κώδικα
Στις κλάσεις χρησιμοποιώ private και public μέρη γιατί ο χρήστης της κλάσης θέλω να έχει πρόσβαση μόνο μέσα από τις συναρτήσεις που του προσφέρω στο public κομμάτι. Έτσι επιβάλω encapsulation στον ορισμό των τύπων μου.
Όσες συναρτήσεις θεώρησα μικρές που συνήθως ήταν geters τις όρισα μέσα στην αντίστοιχη class για να είναι inline.
Στην main ο αριθμός των μαθητών μπορεί να αλλάξει στη μεταβλητη που δείχνει το μεγάλο βέλος που υπάρχει.
Στην υλοποίηση μου θεωρώ δεδομένο οτι ο πίνακας με τους μαθητές περιέχει μαθητές που τα φύλα τους είναι εναλαξ δηλαδή ή ειναι ΑΚΑΚΑΚΑΚΑΚΑΚΑ... ή ΚΑΚΑΚΑΚΑΚΑΚΑΚΑΚΑ... 
Επίσης θεωρώ δεδομένο πως όλες οι τάξεις έχουν τον ίδιο αριθμό μαθητών και πως αν μια τάξη έχει έναν μαθητή μόνο του και είναι αγόρι ο μαθητής που είναι μόνος του στην επόμενη τάξη θα είναι κορίτσι
Στην περίπτωση που πρέπει να αντιμεταθέσω ένα μαθητή με έναν απο το επόμενο τμήμα αλλα δεν υπάρχει επόμενο τμήμα θα τον αντιμεταθέτω με έναν απο το πρώτο τμήμα της ακολουθίας.
